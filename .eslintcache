[{"C:\\Work\\POC\\visualisations\\src\\index.js":"1","C:\\Work\\POC\\visualisations\\src\\reportWebVitals.js":"2","C:\\Work\\POC\\visualisations\\src\\App.js":"3","C:\\Work\\POC\\visualisations\\src\\MockData\\spaceData.js":"4","C:\\Work\\POC\\visualisations\\src\\Utils\\findApiHelper.js":"5","C:\\Work\\POC\\visualisations\\src\\components\\EmptyDataScreen\\EmptyDataScreen.js":"6","C:\\Work\\POC\\visualisations\\src\\components\\SpaceDetail\\SpaceDetail.js":"7","C:\\Work\\POC\\visualisations\\src\\components\\BreadCrum\\Breadcrum.js":"8","C:\\Work\\POC\\visualisations\\src\\MockData\\RelationalGraphConfig.js":"9","C:\\Work\\POC\\visualisations\\src\\Utils\\graphDataTransformation.js":"10","C:\\Work\\POC\\visualisations\\src\\components\\NavBar\\Header.js":"11","C:\\Work\\POC\\visualisations\\src\\components\\RelationalGraph\\RelationalGraph.js":"12","C:\\Work\\POC\\visualisations\\src\\components\\Toolbar\\Toolbar.js":"13"},{"size":478,"mtime":1611152253230,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1611031107864,"results":"16","hashOfConfig":"15"},{"size":4629,"mtime":1611154767785,"results":"17","hashOfConfig":"15"},{"size":1599,"mtime":1611202863569,"results":"18","hashOfConfig":"15"},{"size":714,"mtime":1611152253223,"results":"19","hashOfConfig":"15"},{"size":1233,"mtime":1611202851269,"results":"20","hashOfConfig":"15"},{"size":9734,"mtime":1611203496786,"results":"21","hashOfConfig":"15"},{"size":413,"mtime":1611031107856,"results":"22","hashOfConfig":"15"},{"size":1817,"mtime":1611152253222,"results":"23","hashOfConfig":"15"},{"size":14484,"mtime":1611152253225,"results":"24","hashOfConfig":"15"},{"size":1525,"mtime":1611152253226,"results":"25","hashOfConfig":"15"},{"size":2165,"mtime":1611152253227,"results":"26","hashOfConfig":"15"},{"size":1951,"mtime":1611152253229,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6ciioa",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Work\\POC\\visualisations\\src\\index.js",[],["56","57"],"C:\\Work\\POC\\visualisations\\src\\reportWebVitals.js",[],"C:\\Work\\POC\\visualisations\\src\\App.js",["58","59"],"import './App.css';\r\n// import {\r\n//   Switch,\r\n//   Route,\r\n//   withRouter\r\n// } from 'react-router-dom'\r\nimport graphConfig from './MockData/RelationalGraphConfig';\r\nimport Header from './components/NavBar/Header'\r\nimport RelationalGraph from './components/RelationalGraph/RelationalGraph'\r\nimport Breadcrum from './components/BreadCrum/Breadcrum';\r\nimport transformGraphData, { filterMapping } from './Utils/graphDataTransformation';\r\nimport { getNodes } from './Utils/findApiHelper'\r\nimport { useEffect, useState } from 'react';\r\nimport EmptyDataScreen from './components/EmptyDataScreen/EmptyDataScreen'\r\nimport SpaceDetail from './components/SpaceDetail/SpaceDetail'\r\nimport spaceData from './MockData/spaceData';\r\n\r\nfunction App({ history }) {\r\n\r\n  const [currentFilter, setCurrentFilter] = useState(10000);\r\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] })\r\n  const [filteredData, setFilteredData] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [filterCriteria, setFilterCriteria] = useState([])\r\n  const [path, setPath] = useState('/')\r\n  const [searchString, setSearchString] = useState(\"\")\r\n  // const history = useHistory()\r\n\r\n  const handleSearchSubmit = (queryType, searchValue) => {\r\n    \r\n    if (queryType && searchValue) {\r\n      if (path === '/') {\r\n        const config = {\r\n          resource: \"hierarchy\",\r\n          page: {\r\n            \"pageSize\": 1500,\r\n            \"page\": 1\r\n          },\r\n          q: {\r\n            op: \"and\",\r\n            criteria: [\r\n              {\r\n                op: \"eq\",\r\n                field: \"type\",\r\n                value: queryType === \"asset\" ? \"iot.Asset\" : 'iot.SpatialElement'\r\n              },\r\n              {\r\n                op: \"eq\",\r\n                field: \"name\",\r\n                value: searchValue\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        getNodes(config, handleFindApiResponse)\r\n        setCurrentFilter(null)\r\n        setIsLoading(true)\r\n\r\n      } else {\r\n        setSearchString(searchValue)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onNodeFilterSelect = (value) => {\r\n    setCurrentFilter(value)\r\n  }\r\n\r\n  const handleFindApiResponse = (data) => {\r\n    if (data && data.items) {\r\n      const { parsedData, filterData } = transformGraphData(data)\r\n      setFilterCriteria(filterData)\r\n      setGraphData(parsedData)\r\n      setFilteredData(null)\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const handleNavigation = (path) => {\r\n    console.log('>>>>>>>>>>>>> PATH', path)\r\n    setPath(path)\r\n  }\r\n\r\n  const onClickNode = (source, target) => {\r\n    const config = {\r\n      resource: \"hierarchy\",\r\n      page: {\r\n        pageSize: 1500,\r\n        page: 1\r\n      },\r\n      q: {\r\n        op: \"eq\",\r\n        field: \"id\",\r\n        value: target.label\r\n      }\r\n    }\r\n    getNodes(config, handleFindApiResponse)\r\n    setCurrentFilter(null)\r\n    setIsLoading(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (graphData.nodes.length > 0 && currentFilter && currentFilter !== 'No filter') {\r\n      let mappedObjectKey = ''\r\n      for (let key in filterMapping) {\r\n        if (currentFilter === filterMapping[key]) {\r\n          mappedObjectKey = key\r\n        }\r\n      }\r\n      const [direction, type] = mappedObjectKey.split('-')\r\n      const filteredLinks = graphData.links.filter(el => {\r\n        if (el.type && el.directed) {\r\n          return el.type.includes(type) && el.directed === direction\r\n        }\r\n        return true\r\n      })\r\n      const filteredNodes = graphData.nodes.filter(el => {\r\n        if (el.type && el.directed) {\r\n          return el.type.includes(type) && el.directed === direction\r\n        }\r\n        return true\r\n      })\r\n      setFilteredData({ links: filteredLinks, nodes: filteredNodes })\r\n    }\r\n    if (currentFilter === 'No filter') {\r\n      setFilteredData(null)\r\n    }\r\n  }, [currentFilter])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header onSubmit={handleSearchSubmit} handleNavigation={handleNavigation} />\r\n      {/* <Breadcrum /> */}\r\n      {(isLoading || graphData.nodes.length === 0) && path === '/' && <EmptyDataScreen loading={isLoading} />}\r\n      {!isLoading && graphData.nodes.length > 0 && <div style={{ display: 'flex' }}>\r\n        {path === '/' && <RelationalGraph\r\n          data={filteredData ? filteredData : graphData}\r\n          config={graphConfig}\r\n          filters={filterCriteria}\r\n          onNodeFilterSelect={onNodeFilterSelect}\r\n          onClickNode={onClickNode}\r\n        />}\r\n      </div>}\r\n      {path !== '/' && <SpaceDetail data={spaceData} spaceName={searchString}></SpaceDetail>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","C:\\Work\\POC\\visualisations\\src\\MockData\\spaceData.js",[],"C:\\Work\\POC\\visualisations\\src\\Utils\\findApiHelper.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\EmptyDataScreen\\EmptyDataScreen.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\SpaceDetail\\SpaceDetail.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"C:\\Work\\POC\\visualisations\\src\\components\\BreadCrum\\Breadcrum.js",[],"C:\\Work\\POC\\visualisations\\src\\MockData\\RelationalGraphConfig.js",[],"C:\\Work\\POC\\visualisations\\src\\Utils\\graphDataTransformation.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\NavBar\\Header.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\RelationalGraph\\RelationalGraph.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\Toolbar\\Toolbar.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":128,"column":6,"nodeType":"86","endLine":128,"endColumn":21,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"88","line":8,"column":12,"nodeType":"82","messageId":"83","endLine":8,"endColumn":19},{"ruleId":"80","severity":1,"message":"89","line":9,"column":12,"nodeType":"82","messageId":"83","endLine":9,"endColumn":19},{"ruleId":"80","severity":1,"message":"90","line":10,"column":12,"nodeType":"82","messageId":"83","endLine":10,"endColumn":19},{"ruleId":"80","severity":1,"message":"91","line":11,"column":12,"nodeType":"82","messageId":"83","endLine":11,"endColumn":19},{"ruleId":"80","severity":1,"message":"92","line":12,"column":12,"nodeType":"82","messageId":"83","endLine":12,"endColumn":19},{"ruleId":"80","severity":1,"message":"93","line":14,"column":12,"nodeType":"82","messageId":"83","endLine":14,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":206,"column":46,"nodeType":"96","messageId":"97","endLine":206,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":218,"column":46,"nodeType":"96","messageId":"97","endLine":218,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":223,"column":46,"nodeType":"96","messageId":"97","endLine":223,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":237,"column":78,"nodeType":"96","messageId":"97","endLine":237,"endColumn":80},{"ruleId":"94","severity":1,"message":"95","line":243,"column":85,"nodeType":"96","messageId":"97","endLine":243,"endColumn":87},{"ruleId":"94","severity":1,"message":"95","line":243,"column":165,"nodeType":"96","messageId":"97","endLine":243,"endColumn":167},{"ruleId":"94","severity":1,"message":"95","line":261,"column":21,"nodeType":"96","messageId":"97","endLine":261,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":263,"column":28,"nodeType":"96","messageId":"97","endLine":263,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":265,"column":28,"nodeType":"96","messageId":"97","endLine":265,"endColumn":30},{"ruleId":"84","severity":1,"message":"98","line":275,"column":8,"nodeType":"86","endLine":275,"endColumn":19,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Breadcrum' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'graphData.links' and 'graphData.nodes'. Either include them or remove the dependency array.","ArrayExpression",["102"],"'apiRes1' is assigned a value but never used.","'apiRes2' is assigned a value but never used.","'apiRes3' is assigned a value but never used.","'apiRes4' is assigned a value but never used.","'apiRes5' is assigned a value but never used.","'cardValues' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getCard1Data' and 'resetValue'. Either include them or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [currentFilter, graphData.links, graphData.nodes]",{"range":"108","text":"109"},"Update the dependencies array to be: [getCard1Data, resetValue, spaceName]",{"range":"110","text":"111"},[3836,3851],"[currentFilter, graphData.links, graphData.nodes]",[8697,8708],"[getCard1Data, resetValue, spaceName]"]