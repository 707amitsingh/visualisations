[{"C:\\Work\\POC\\visualisations\\src\\index.js":"1","C:\\Work\\POC\\visualisations\\src\\App.js":"2","C:\\Work\\POC\\visualisations\\src\\reportWebVitals.js":"3","C:\\Work\\POC\\visualisations\\src\\MockData\\RelationalGraphConfig.js":"4","C:\\Work\\POC\\visualisations\\src\\MockData\\mockData1.js":"5","C:\\Work\\POC\\visualisations\\src\\components\\BreadCrum\\Breadcrum.js":"6","C:\\Work\\POC\\visualisations\\src\\components\\NavBar\\Header.js":"7","C:\\Work\\POC\\visualisations\\src\\components\\RelationalGraph\\RelationalGraph.js":"8","C:\\Work\\POC\\visualisations\\src\\MockData\\mockData2.js":"9","C:\\Work\\POC\\visualisations\\src\\Utils\\graphDataTransformation.js":"10","C:\\Work\\POC\\visualisations\\src\\components\\Toolbar\\Toolbar.js":"11","C:\\Work\\POC\\visualisations\\src\\components\\SpaceDetail\\SpaceDetail.js":"12","C:\\Work\\POC\\visualisations\\src\\MockData\\spaceData.js":"13","C:\\Work\\POC\\visualisations\\src\\Utils\\findApiHelper.js":"14","C:\\Work\\POC\\visualisations\\src\\components\\EmptyDataScreen\\EmptyDataScreen.js":"15"},{"size":616,"mtime":1611136109175,"results":"16","hashOfConfig":"17"},{"size":4078,"mtime":1611136194167,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1611031107864,"results":"19","hashOfConfig":"17"},{"size":1817,"mtime":1611114323858,"results":"20","hashOfConfig":"17"},{"size":24214,"mtime":1611031107854,"results":"21","hashOfConfig":"17"},{"size":413,"mtime":1611031107856,"results":"22","hashOfConfig":"17"},{"size":1301,"mtime":1611031107857,"results":"23","hashOfConfig":"17"},{"size":2170,"mtime":1611114323863,"results":"24","hashOfConfig":"17"},{"size":28259,"mtime":1611031107855,"results":"25","hashOfConfig":"17"},{"size":3524,"mtime":1611136109173,"results":"26","hashOfConfig":"17"},{"size":1951,"mtime":1611136109174,"results":"27","hashOfConfig":"17"},{"size":5473,"mtime":1611136097717,"results":"28","hashOfConfig":"17"},{"size":1588,"mtime":1611136097709,"results":"29","hashOfConfig":"17"},{"size":1074,"mtime":1611136109172,"results":"30","hashOfConfig":"17"},{"size":1410,"mtime":1611114323862,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"6ciioa",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Work\\POC\\visualisations\\src\\index.js",[],["67","68"],"C:\\Work\\POC\\visualisations\\src\\App.js",["69","70","71"],"import './App.css';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom'\r\nimport graphConfig from './MockData/RelationalGraphConfig';\r\nimport Header from './components/NavBar/Header'\r\nimport RelationalGraph from './components/RelationalGraph/RelationalGraph'\r\nimport Breadcrum from './components/BreadCrum/Breadcrum';\r\nimport transformGraphData from './Utils/graphDataTransformation';\r\nimport { getNodes } from './Utils/findApiHelper'\r\nimport { useEffect, useState } from 'react';\r\nimport EmptyDataScreen from './components/EmptyDataScreen/EmptyDataScreen'\r\nimport SpaceDetail  from './components/SpaceDetail/SpaceDetail'\r\nimport spaceData from './MockData/spaceData';\r\n\r\nfunction App() {\r\n\r\n  const [currentFilter, setCurrentFilter] = useState(10000);\r\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] })\r\n  const [filteredData, setFilteredData] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [filterCriteria, setFilterCriteria] = useState([])\r\n\r\n  const handleSearchSubmit = (queryType, searchValue) => {\r\n    if (queryType && searchValue) {\r\n      const config = {\r\n        resource: \"hierarchy\",\r\n        page: {\r\n          \"pageSize\": 1500,\r\n          \"page\": 1\r\n        },\r\n        q: {\r\n          op: \"and\",\r\n          criteria: [\r\n            {\r\n              op: \"eq\",\r\n              field: \"type\",\r\n              value: queryType === \"asset\" ? \"iot.Asset\" : 'iot.SpatialElement'\r\n            },\r\n            {\r\n              op: \"eq\",\r\n              field: \"name\",\r\n              value: searchValue\r\n            }\r\n          ]\r\n        }\r\n      }\r\n      getNodes(config, handleFindApiResponse)\r\n      setCurrentFilter(null)\r\n      setIsLoading(true)\r\n    }\r\n  }\r\n\r\n  const onNodeFilterSelect = (value) => {\r\n    setCurrentFilter(value)\r\n  }\r\n\r\n  const handleFindApiResponse = (data) => {\r\n    if (data && data.items) {\r\n      const { parsedData, filterData } = transformGraphData(data)\r\n      setFilterCriteria(filterData)\r\n      setGraphData(parsedData)\r\n      setFilteredData(null)\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const onClickNode = (source, target) => {\r\n    const config = {\r\n      resource: \"hierarchy\",\r\n      page: {\r\n        pageSize: 1500,\r\n        page: 1\r\n      },\r\n      q: {\r\n        op: \"eq\",\r\n        field: \"id\",\r\n        value: target.label\r\n      }\r\n    }\r\n    getNodes(config, handleFindApiResponse)\r\n    setIsLoading(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (graphData.nodes.length > 0 && currentFilter && currentFilter !== 'No filter') {\r\n      const filteredLinks = graphData.links.filter(el => {\r\n        if (el.type) {\r\n          return el.type.includes(currentFilter)\r\n        }\r\n        return true\r\n      })\r\n      const filteredNodes = graphData.nodes.filter(el => {\r\n        if (el.type) {\r\n\r\n          return el.type.includes(currentFilter)\r\n        }\r\n        return true\r\n      })\r\n      setFilteredData({ links: filteredLinks, nodes: filteredNodes })\r\n    }\r\n    if (currentFilter === 'No filter') {\r\n      setFilteredData(null)\r\n    }\r\n  }, [currentFilter])\r\n\r\n  console.log('>>>>>>>>>>>>>> Filter Data: ', filterCriteria)\r\n  return (\r\n    <div className=\"App\">\r\n      <Header onSubmit={handleSearchSubmit} />\r\n      {/* <Breadcrum /> */}\r\n      <SpaceDetail  data={spaceData}></SpaceDetail>\r\n      {(isLoading || graphData.nodes.length === 0) && <EmptyDataScreen loading={isLoading} /> }\r\n      {!isLoading && graphData.nodes.length > 0 && <div style={{ display: 'flex' }}>\r\n        <Route>\r\n          <Switch>\r\n            <Route exact path=\"/ques\">\r\n              <div>Hello, world</div>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <RelationalGraph\r\n                data={filteredData ? filteredData : graphData}\r\n                config={graphConfig}\r\n                filters={filterCriteria}\r\n                onNodeFilterSelect={onNodeFilterSelect}\r\n                onClickNode={onClickNode}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </Route>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Work\\POC\\visualisations\\src\\reportWebVitals.js",[],"C:\\Work\\POC\\visualisations\\src\\MockData\\RelationalGraphConfig.js",[],"C:\\Work\\POC\\visualisations\\src\\MockData\\mockData1.js",[],["72","73"],"C:\\Work\\POC\\visualisations\\src\\components\\BreadCrum\\Breadcrum.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\NavBar\\Header.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\RelationalGraph\\RelationalGraph.js",[],"C:\\Work\\POC\\visualisations\\src\\MockData\\mockData2.js",[],"C:\\Work\\POC\\visualisations\\src\\Utils\\graphDataTransformation.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\Toolbar\\Toolbar.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\SpaceDetail\\SpaceDetail.js",["74","75","76","77","78","79","80","81","82","83"],"import React, { useEffect, useState } from 'react';\r\nimport './SpaceDetail.css';\r\nimport { Card, Container, Row, Col, Badge } from 'react-bootstrap';\r\nimport { House, Bricks, Thermometer, Soundwave, Forward } from 'react-bootstrap-icons';\r\nimport { getNodes } from '../../Utils/findApiHelper';\r\n\r\nconst SpaceDetail = ({ data }) => {\r\n\r\n    let apiRes1, apiRes2, apiRes3, apiRes4;\r\n    const [windowSize, setWindowSize] = useState(window.innerWidth)\r\n    const handleResize = () => {\r\n        setWindowSize(window.innerWidth)\r\n    }\r\n\r\n    const config1 = {\r\n        resource: \"hierarchy\",\r\n        page: {\r\n            \"pageSize\": 1500,\r\n            \"page\": 1\r\n        },\r\n        q: {\r\n            op: \"and\",\r\n            criteria: [\r\n                {\r\n                    op: \"eq\",\r\n                    field: \"type\",\r\n                    value: \"iot.SpatialElement\"\r\n                },\r\n                {\r\n                    op: \"eq\",\r\n                    field: \"name\",\r\n                    value: \"GF_L02_CAM16\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    const config2 = {\r\n        resource: \"hierarchy\",\r\n        page: {\r\n            \"pageSize\": 1500,\r\n            \"page\": 1\r\n        },\r\n        q: {\r\n            op: \"and\",\r\n            criteria: [\r\n                {\r\n                    op: \"eq\",\r\n                    field: \"relationships.id\",\r\n                    value: \"iot.SUPPLIES_SPATIAL_ELEMENT\"\r\n                },\r\n                {\r\n                    op: \"eq\",\r\n                    field: \"relationships.relationshipEntityList.type\",\r\n                    value: \"iot.SpatialElement\"\r\n                },\r\n                {\r\n                    op: \"eq\",\r\n                    field: \"relationships.relationshipEntityList.id\",\r\n                    value: \"Y3VzdG9tZXIuaTY0MzYxNDAzLTFiMWQtNDZhZi05YzQ4LWI3ZjdmMTUxZGQzYg==\"\r\n                },\r\n                {\r\n                    op: \"eq\",\r\n                    field: \"points.role\",\r\n                    value: \"Supply Air Temperature Setpoint\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize)\r\n        \r\n        return _ => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [windowSize, data])\r\n\r\n    const getCard1Data = () => {\r\n        getNodes(config1, handleCard1Response);\r\n    }\r\n\r\n    const getCard1Api2Data = () => {\r\n        getNodes(config2, handleCard2Response);\r\n    }\r\n    \r\n    const handleCard1Response = (res) => {\r\n        apiRes1 = res;\r\n        getCard1Api2Data();\r\n    }\r\n\r\n    const handleCard2Response = (res) => {\r\n        apiRes2 = res;\r\n        debugger;\r\n        data[0][\"questions\"][0].value = res.items[0].points.find(x => x.role == \"Supply Air Temperature Setpoint\").name\r\n    }\r\n\r\n    const getCardIcon = (room) => {\r\n        if (room.id == \"1\") {\r\n            return <House></House>\r\n        } else if (room.id == \"2\") {\r\n            return <Soundwave></Soundwave>\r\n        } else if (room.id == \"3\") {\r\n            return <Thermometer></Thermometer>\r\n        }\r\n        return (<Forward></Forward>);\r\n    }\r\n\r\n    getCard1Data()\r\n    return (\r\n        <div>\r\n            <Container><br />\r\n                <Row>\r\n                    {data[0][\"questions\"].map((elem, index) => (\r\n                        <Col sm={4} key={index}>\r\n                            <Card className=\"info-box l-bg-green order-info-box\">\r\n                                <Card.Body className=\"info-box-block\">\r\n                                    <h5 className=\"m-b-20\">{elem.question}</h5>\r\n                                    <h3 className=\"text-left\">\r\n                                        <i className=\"m-r-5\">\r\n                                            {getCardIcon(elem)}\r\n                                        </i><span >{elem.value}</span>\r\n                                    </h3>\r\n                                    {/* <blockquote className=\"blockquote mb-0\">\r\n                                        <p>\r\n                                            {elem.question}\r\n                                        </p>\r\n                                        <footer >\r\n                                            <Badge variant=\"primary\">-- value</Badge>\r\n                                        </footer>\r\n                                    </blockquote> */}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                {/* <Row>\r\n                    {data[0][\"questions\"].map((elem, index) => (\r\n                        <Col sm={4} key={index}>\r\n                            <div className=\"info-box l-bg-green order-info-box\">\r\n                                <div className=\"info-box-block\">\r\n                                    <h5 className=\"m-b-20\">{elem.question}</h5>\r\n                                    <h3 className=\"text-left\">\r\n                                        <i className=\"m-r-5\">\r\n                                            {getCardIcon(elem)}\r\n                                        </i><span >358</span>\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    ))}\r\n                </Row> */}\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SpaceDetail;","C:\\Work\\POC\\visualisations\\src\\MockData\\spaceData.js",[],"C:\\Work\\POC\\visualisations\\src\\Utils\\findApiHelper.js",["84","85","86"],"const url = \"https://dev-cbld-sas-findapi.dev.forge.connected.honeywell.com/v1/search\"\r\nconst ApiKey = 'HdsXlhBoGZgsifFSOI0mGCCGB4qLw0oxNYxtiZeO' // don't push code with this detail\r\nconst customerId = 'idf0a29149-660a-4493-bba1-f3ffa4388078' // don't push code with this detail\r\n\r\nconst chillerSvg = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRaHBDfGuds05HBovlOJ9hXKnlW9L7aWrq0fw&usqp=CAU\"\r\nconst chiller2 = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSlIyENHpT0t4VMNGk9xjQMs86ylk2xuCEyeQ&usqp=CAU\"\r\nconst ahu1 = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjmk54qjAUrbrtokjet2HXyulUhvO-mKIqdQ&usqp=CAU\"\r\n\r\nexport const getNodes = (data, callBack) => {\r\n\r\n    const config = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'customerId':customerId,\r\n          'ApiKey': ApiKey,\r\n          'Access-Control-Allow-Origin': '*'\r\n        },\r\n        body: JSON.stringify(data),\r\n    }\r\n\r\n    fetch(url, config)\r\n    .then(response => response.json())\r\n    .then(data => callBack(data))\r\n}","C:\\Work\\POC\\visualisations\\src\\components\\EmptyDataScreen\\EmptyDataScreen.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":3,"nodeType":"93","messageId":"94","endLine":5,"endColumn":7},{"ruleId":"91","severity":1,"message":"95","line":10,"column":8,"nodeType":"93","messageId":"94","endLine":10,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":107,"column":6,"nodeType":"98","endLine":107,"endColumn":21,"suggestions":"99"},{"ruleId":"87","replacedBy":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"91","severity":1,"message":"102","line":3,"column":37,"nodeType":"93","messageId":"94","endLine":3,"endColumn":42},{"ruleId":"91","severity":1,"message":"103","line":4,"column":17,"nodeType":"93","messageId":"94","endLine":4,"endColumn":23},{"ruleId":"91","severity":1,"message":"104","line":9,"column":27,"nodeType":"93","messageId":"94","endLine":9,"endColumn":34},{"ruleId":"91","severity":1,"message":"105","line":9,"column":36,"nodeType":"93","messageId":"94","endLine":9,"endColumn":43},{"ruleId":"91","severity":1,"message":"106","line":88,"column":9,"nodeType":"93","messageId":"94","endLine":88,"endColumn":16},{"ruleId":"91","severity":1,"message":"107","line":93,"column":9,"nodeType":"93","messageId":"94","endLine":93,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":95,"column":78,"nodeType":"110","messageId":"111","endLine":95,"endColumn":80},{"ruleId":"108","severity":1,"message":"109","line":99,"column":21,"nodeType":"110","messageId":"111","endLine":99,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":101,"column":28,"nodeType":"110","messageId":"111","endLine":101,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":103,"column":28,"nodeType":"110","messageId":"111","endLine":103,"endColumn":30},{"ruleId":"91","severity":1,"message":"112","line":5,"column":7,"nodeType":"93","messageId":"94","endLine":5,"endColumn":17},{"ruleId":"91","severity":1,"message":"113","line":6,"column":7,"nodeType":"93","messageId":"94","endLine":6,"endColumn":15},{"ruleId":"91","severity":1,"message":"114","line":7,"column":7,"nodeType":"93","messageId":"94","endLine":7,"endColumn":11},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Breadcrum' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'graphData.links' and 'graphData.nodes'. Either include them or remove the dependency array.","ArrayExpression",["117"],["115"],["116"],"'Badge' is defined but never used.","'Bricks' is defined but never used.","'apiRes3' is defined but never used.","'apiRes4' is defined but never used.","'apiRes1' is assigned a value but never used.","'apiRes2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'chillerSvg' is assigned a value but never used.","'chiller2' is assigned a value but never used.","'ahu1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [currentFilter, graphData.links, graphData.nodes]",{"range":"120","text":"121"},[3061,3076],"[currentFilter, graphData.links, graphData.nodes]"]