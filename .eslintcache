[{"C:\\Work\\POC\\visualisations\\src\\index.js":"1","C:\\Work\\POC\\visualisations\\src\\App.js":"2","C:\\Work\\POC\\visualisations\\src\\reportWebVitals.js":"3","C:\\Work\\POC\\visualisations\\src\\MockData\\RelationalGraphConfig.js":"4","C:\\Work\\POC\\visualisations\\src\\MockData\\mockData1.js":"5","C:\\Work\\POC\\visualisations\\src\\components\\BreadCrum\\Breadcrum.js":"6","C:\\Work\\POC\\visualisations\\src\\components\\NavBar\\Header.js":"7","C:\\Work\\POC\\visualisations\\src\\components\\RelationalGraph\\RelationalGraph.js":"8","C:\\Work\\POC\\visualisations\\src\\MockData\\mockData2.js":"9","C:\\Work\\POC\\visualisations\\src\\Utils\\graphDataTransformation.js":"10","C:\\Work\\POC\\visualisations\\src\\components\\Toolbar\\Toolbar.js":"11","C:\\Work\\POC\\visualisations\\src\\components\\SpaceDetail\\SpaceDetail.js":"12","C:\\Work\\POC\\visualisations\\src\\MockData\\spaceData.js":"13","C:\\Work\\POC\\visualisations\\src\\Utils\\findApiHelper.js":"14","C:\\Work\\POC\\visualisations\\src\\components\\EmptyDataScreen\\EmptyDataScreen.js":"15"},{"size":517,"mtime":1611031107862,"results":"16","hashOfConfig":"17"},{"size":3706,"mtime":1611114551806,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1611031107864,"results":"19","hashOfConfig":"17"},{"size":1817,"mtime":1611114323858,"results":"20","hashOfConfig":"17"},{"size":24214,"mtime":1611031107854,"results":"21","hashOfConfig":"17"},{"size":413,"mtime":1611031107856,"results":"22","hashOfConfig":"17"},{"size":1301,"mtime":1611031107857,"results":"23","hashOfConfig":"17"},{"size":2170,"mtime":1611114323863,"results":"24","hashOfConfig":"17"},{"size":28259,"mtime":1611031107855,"results":"25","hashOfConfig":"17"},{"size":2071,"mtime":1611114323860,"results":"26","hashOfConfig":"17"},{"size":2015,"mtime":1611114323865,"results":"27","hashOfConfig":"17"},{"size":2363,"mtime":1611119310650,"results":"28","hashOfConfig":"17"},{"size":1588,"mtime":1611117698747,"results":"29","hashOfConfig":"17"},{"size":714,"mtime":1611114323859,"results":"30","hashOfConfig":"17"},{"size":1410,"mtime":1611114323862,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"6ciioa",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Work\\POC\\visualisations\\src\\index.js",[],["66","67"],"C:\\Work\\POC\\visualisations\\src\\App.js",["68"],"import './App.css';\r\nimport graphConfig from './MockData/RelationalGraphConfig';\r\nimport Header from './components/NavBar/Header'\r\nimport RelationalGraph from './components/RelationalGraph/RelationalGraph'\r\nimport Breadcrum from './components/BreadCrum/Breadcrum';\r\nimport transformGraphData from './Utils/graphDataTransformation';\r\nimport { getNodes } from './Utils/findApiHelper'\r\nimport { useEffect, useState } from 'react';\r\nimport EmptyDataScreen from './components/EmptyDataScreen/EmptyDataScreen'\r\nimport SpaceDetail  from './components/SpaceDetail/SpaceDetail'\r\nimport spaceData from './MockData/spaceData';\r\n\r\nfunction App() {\r\n\r\n  const [currentFilter, setCurrentFilter] = useState(10000);\r\n  const [graphData, setGraphData] = useState({ nodes: [], links: []})\r\n  const [filteredData, setFilteredData] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [filterCriteria, setFilterCriteria] = useState([])\r\n\r\n  const handleSearchSubmit = (queryType, searchValue) => {\r\n    if(queryType && searchValue) {\r\n      const config = {\r\n        resource: \"hierarchy\",\r\n        page: {\r\n            \"pageSize\": 1500,\r\n            \"page\": 1\r\n        },\r\n        q: {\r\n            op: \"and\",\r\n            criteria: [\r\n                {\r\n                    op: \"eq\",\r\n                    field: \"type\",\r\n                    value: queryType === \"asset\" ? \"iot.Asset\" : 'iot.SpatialElement'\r\n                },\r\n                {\r\n                    op: \"eq\",\r\n                    field: \"name\",\r\n                    value: searchValue\r\n                }\r\n            ]\r\n        }\r\n    }\r\n      getNodes(config, handleFindApiResponse)\r\n      setIsLoading(true)\r\n    }\r\n  }\r\n\r\n  const onNodeFilterSelect = (value) => {\r\n    setCurrentFilter(value)\r\n  }\r\n\r\n  const handleFindApiResponse = (data) => {\r\n    if(data && data.items){\r\n      const { parsedData, filterData } = transformGraphData(data)\r\n      setFilterCriteria(filterData)\r\n      setGraphData(parsedData)\r\n      setFilteredData(null)\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const onClickNode = (source, target) => {\r\n        const config = {\r\n      resource: \"hierarchy\",\r\n      page: {\r\n          pageSize: 1500,\r\n          page: 1\r\n      },\r\n      q: {\r\n           op: \"eq\",\r\n          field: \"id\",\r\n          value: target.label\r\n      }\r\n  }\r\n    getNodes(config, handleFindApiResponse)\r\n    setIsLoading(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(graphData.nodes.length > 0 && currentFilter && currentFilter !== 'No filter') {\r\n      const filteredLinks = graphData.links.filter(el => {\r\n        if(el.type) {\r\n          return el.type.includes(currentFilter)\r\n        } \r\n        return true\r\n      })\r\n      const filteredNodes = graphData.nodes.filter(el => {\r\n        if(el.type) {\r\n          return el.type.includes(currentFilter)\r\n        }\r\n        return true\r\n      })\r\n      setFilteredData({links: filteredLinks, nodes: filteredNodes})\r\n    }\r\n    if(currentFilter === 'No filter') {\r\n      setFilteredData(null)\r\n    }\r\n\r\n  }, [currentFilter])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header onSubmit={handleSearchSubmit} />\r\n      <Breadcrum />\r\n      <SpaceDetail  data={spaceData}></SpaceDetail>\r\n      {(isLoading || graphData.nodes.length === 0) && <EmptyDataScreen loading={isLoading} /> }\r\n      {!isLoading && graphData.nodes.length > 0 && <div style={{ display: 'flex' }}>\r\n        <RelationalGraph\r\n          data={filteredData ? filteredData : graphData}\r\n          config={graphConfig}\r\n          filters={filterCriteria}\r\n          onNodeFilterSelect={onNodeFilterSelect}\r\n          onClickNode={onClickNode}\r\n          />\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Work\\POC\\visualisations\\src\\reportWebVitals.js",[],"C:\\Work\\POC\\visualisations\\src\\MockData\\RelationalGraphConfig.js",[],"C:\\Work\\POC\\visualisations\\src\\MockData\\mockData1.js",[],["69","70"],"C:\\Work\\POC\\visualisations\\src\\components\\BreadCrum\\Breadcrum.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\NavBar\\Header.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\RelationalGraph\\RelationalGraph.js",[],"C:\\Work\\POC\\visualisations\\src\\MockData\\mockData2.js",[],"C:\\Work\\POC\\visualisations\\src\\Utils\\graphDataTransformation.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\Toolbar\\Toolbar.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\SpaceDetail\\SpaceDetail.js",["71","72"],"import React, { useEffect, useState } from 'react';\r\nimport './SpaceDetail.css';\r\nimport { Card, Container, Row, Col, Badge } from 'react-bootstrap';\r\nimport { Bricks, Thermometer, TypeH3 } from 'react-bootstrap-icons';\r\n\r\nconst SpaceDetail = ({ data }) => {\r\n\r\n    const [windowSize, setWindowSize] = useState(window.innerWidth)\r\n    const handleResize = () => {\r\n        setWindowSize(window.innerWidth)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize)\r\n        return _ => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [windowSize])\r\n\r\n    return (\r\n        <div>\r\n            <Container><br />\r\n                <Row>\r\n                    {data[0][\"questions\"].map((elem, index) => (\r\n                        <Col sm={4} key={index}>\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <blockquote className=\"blockquote mb-0\">\r\n                                        <p>\r\n                                            {elem.question}\r\n                                        </p>\r\n                                        <footer >\r\n                                            <Badge variant=\"primary\">-- value</Badge>\r\n                                        </footer>\r\n                                    </blockquote>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Row>\r\n                    {data[0][\"questions\"].map((elem, index) => (\r\n                        <Col sm={4} key={index}>\r\n                            <div className=\"info-box l-bg-green order-info-box\">\r\n                                <div className=\"info-box-block\">\r\n                                    <h5 className=\"m-b-20\">{elem.question}</h5>\r\n                                    <h3 className=\"text-right\">\r\n                                        <i className=\"text-left\"><Thermometer></Thermometer></i><span >358</span>\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpaceDetail;","C:\\Work\\POC\\visualisations\\src\\MockData\\spaceData.js",[],"C:\\Work\\POC\\visualisations\\src\\Utils\\findApiHelper.js",[],"C:\\Work\\POC\\visualisations\\src\\components\\EmptyDataScreen\\EmptyDataScreen.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":101,"column":6,"nodeType":"79","endLine":101,"endColumn":21,"suggestions":"80"},{"ruleId":"73","replacedBy":"81"},{"ruleId":"75","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"83","severity":1,"message":"87","line":4,"column":31,"nodeType":"85","messageId":"86","endLine":4,"endColumn":37},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'graphData.links' and 'graphData.nodes'. Either include them or remove the dependency array.","ArrayExpression",["90"],["88"],["89"],"no-unused-vars","'Bricks' is defined but never used.","Identifier","unusedVar","'TypeH3' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [currentFilter, graphData.links, graphData.nodes]",{"range":"93","text":"94"},[3029,3044],"[currentFilter, graphData.links, graphData.nodes]"]